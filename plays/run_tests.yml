- set_fact:
    remoteci_data: "{{ hostvars['localhost'].job_informations['job']['remoteci']['data']|default({}) }}"
- set_fact:
    remoteci_data_rhcert: "{{ remoteci_data['rhcert']|default({}) }}"
- set_fact:
    remoteci_data_tempest: "{{ remoteci_data['tempest']|default({}) }}"
- set_fact:
    release: '{{ hostvars.localhost.job_informations.job.topic.data.releasename }}'
    tempest_exit_on_failure: false
    run_tempest: true
    test_regex: ''
    skip_file_src: "{{ remoteci_data_tempest['skip_file_src'] | default('') }}"
    openstack_certification_output_format: junit
    openstack_certification_output_filename: cert.junit
    openstack_certification_dest_dir: "{{ lookup('env', 'HOME') }}/.quickstart"
    openstack_certification_results_download: true
    openstack_certification_tempest_conf_path: /home/stack/tempest/etc/tempest.conf
    openstack_certification_tempest_conf_path_is_remote: Yes
    openstack_certification_tests: "{{ remoteci_data_rhcert['tests']|default(['self_check', 'supportable', 'director']) }}"

- name: default-overrides.conf is in python-tempestconf since ocata
  package:
    name: python-tempestconf
    state: present
  become: true
  when: release in ['ocata', 'pike', 'queens']

- name: default-overrides.conf is in openstack-tempest before ocata
  package:
    name: openstack-tempest
    state: present
  become: true
  when: release in ['mitaka', 'newton']

- name: Copy tempest config overrides
  copy:
    src: tempest-overrides.conf
    dest: ~/tempest-deployer-input.conf

- name: Apply tempest configuration sent by the server
  ini_file:
    path: ~/tempest-deployer-input.conf
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
  with_items: "{{ remoteci_data['tempest']['default_overrides']|default([]) }}"
  when: "'tempest' in remoteci_data.keys()"

- name: Pull all tempest tests
  command: 'yum install -y python-*-tests'
  become: true

- name: Start the valide-tempest role
  include_role:
    name: "{{ release }}/validate-tempest"

- name: Start the tripleo-inventory role
  include_role:
    name: "{{ release }}/tripleo-inventory"
  vars:
    inventory: all
    undercloud_type: baremetal

- name: Start the tripleo-validations role
  include_role:
    name: "{{ release }}/tripleo-validations"
  vars:
    run_tripleo_validations: true
    run_tripleo_validations_setup: true
    validations_group:
      - prep
      - pre-deployment
      - pre-introspection
      - post-deployment
  when: release not in ['liberty', 'mitaka']

- name: Run Red Hat OpenStack Certification test-suite
  include_role:
    name: "openstack-certification"
  when:
    - release in ['newton', 'ocata', 'pike', 'queens']
    - ansible_distribution == 'RedHat'
